{"version":3,"file":"index.js","sources":["../../node_modules/react-markdown/lib/uri-transformer.js","../../node_modules/is-buffer/index.js","../../node_modules/unist-util-stringify-position/lib/index.js","../../node_modules/vfile-message/lib/index.js","../../node_modules/vfile/lib/minurl.shared.js","../../node_modules/vfile/lib/index.js","../../node_modules/bail/index.js","../../node_modules/extend/index.js","../../node_modules/is-plain-obj/index.js","../../node_modules/trough/index.js","../../node_modules/unified/lib/index.js","../../node_modules/mdast-util-to-string/lib/index.js","../../node_modules/micromark-util-chunked/index.js","../../node_modules/micromark-util-combine-extensions/index.js","../../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../../node_modules/micromark-util-character/index.js","../../node_modules/micromark-factory-space/index.js","../../node_modules/micromark/lib/initialize/content.js","../../node_modules/micromark/lib/initialize/document.js","../../node_modules/micromark-util-classify-character/index.js","../../node_modules/micromark-util-resolve-all/index.js","../../node_modules/micromark-core-commonmark/lib/attention.js","../../node_modules/micromark-core-commonmark/lib/autolink.js","../../node_modules/micromark-core-commonmark/lib/blank-line.js","../../node_modules/micromark-core-commonmark/lib/block-quote.js","../../node_modules/micromark-core-commonmark/lib/character-escape.js","../../node_modules/character-entities/index.js","../../node_modules/decode-named-character-reference/index.js","../../node_modules/micromark-core-commonmark/lib/character-reference.js","../../node_modules/micromark-core-commonmark/lib/code-fenced.js","../../node_modules/micromark-core-commonmark/lib/code-indented.js","../../node_modules/micromark-core-commonmark/lib/code-text.js","../../node_modules/micromark-util-subtokenize/index.js","../../node_modules/micromark-core-commonmark/lib/content.js","../../node_modules/micromark-factory-destination/index.js","../../node_modules/micromark-factory-label/index.js","../../node_modules/micromark-factory-title/index.js","../../node_modules/micromark-factory-whitespace/index.js","../../node_modules/micromark-util-normalize-identifier/index.js","../../node_modules/micromark-core-commonmark/lib/definition.js","../../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../../node_modules/micromark-core-commonmark/lib/heading-atx.js","../../node_modules/micromark-util-html-tag-name/index.js","../../node_modules/micromark-core-commonmark/lib/html-flow.js","../../node_modules/micromark-core-commonmark/lib/html-text.js","../../node_modules/micromark-core-commonmark/lib/label-end.js","../../node_modules/micromark-core-commonmark/lib/label-start-image.js","../../node_modules/micromark-core-commonmark/lib/label-start-link.js","../../node_modules/micromark-core-commonmark/lib/line-ending.js","../../node_modules/micromark-core-commonmark/lib/thematic-break.js","../../node_modules/micromark-core-commonmark/lib/list.js","../../node_modules/micromark-core-commonmark/lib/setext-underline.js","../../node_modules/micromark/lib/initialize/flow.js","../../node_modules/micromark/lib/initialize/text.js","../../node_modules/micromark/lib/create-tokenizer.js","../../node_modules/micromark/lib/constructs.js","../../node_modules/micromark/lib/parse.js","../../node_modules/micromark/lib/preprocess.js","../../node_modules/micromark-util-decode-numeric-character-reference/index.js","../../node_modules/micromark-util-decode-string/index.js","../../node_modules/mdast-util-from-markdown/lib/index.js","../../node_modules/micromark/lib/postprocess.js","../../node_modules/remark-parse/lib/index.js","../../node_modules/micromark-util-sanitize-uri/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../../node_modules/mdast-util-to-hast/lib/revert.js","../../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../../node_modules/unist-util-position/lib/index.js","../../node_modules/trim-lines/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../../node_modules/mdast-util-to-hast/lib/handlers/break.js","../../node_modules/mdast-util-to-hast/lib/handlers/code.js","../../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../../node_modules/mdast-util-to-hast/lib/handlers/html.js","../../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../../node_modules/mdast-util-to-hast/lib/handlers/image.js","../../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../../node_modules/mdast-util-to-hast/lib/handlers/link.js","../../node_modules/mdast-util-to-hast/lib/handlers/list.js","../../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../../node_modules/mdast-util-to-hast/lib/handlers/root.js","../../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../../node_modules/mdast-util-to-hast/lib/handlers/table.js","../../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../../node_modules/mdast-util-to-hast/lib/handlers/text.js","../../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../../node_modules/unist-util-is/lib/index.js","../../node_modules/unist-util-visit-parents/lib/color.js","../../node_modules/unist-util-visit-parents/lib/index.js","../../node_modules/unist-util-visit/lib/index.js","../../node_modules/mdast-util-to-hast/node_modules/mdast-util-definitions/lib/index.js","../../node_modules/mdast-util-to-hast/lib/state.js","../../node_modules/unist-util-generated/lib/index.js","../../node_modules/mdast-util-to-hast/lib/index.js","../../node_modules/mdast-util-to-hast/lib/footer.js","../../node_modules/remark-rehype/lib/index.js","../../node_modules/react-is/cjs/react-is.production.min.js","../../node_modules/react-is/cjs/react-is.development.js","../../node_modules/react-is/index.js","../../node_modules/object-assign/index.js","../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../node_modules/prop-types/lib/has.js","../../node_modules/prop-types/checkPropTypes.js","../../node_modules/prop-types/factoryWithTypeCheckers.js","../../node_modules/prop-types/factoryWithThrowingShims.js","../../node_modules/prop-types/index.js","../../node_modules/property-information/lib/util/schema.js","../../node_modules/property-information/lib/util/merge.js","../../node_modules/property-information/lib/normalize.js","../../node_modules/property-information/lib/util/info.js","../../node_modules/property-information/lib/util/types.js","../../node_modules/property-information/lib/util/defined-info.js","../../node_modules/property-information/lib/util/create.js","../../node_modules/property-information/lib/xlink.js","../../node_modules/property-information/lib/xml.js","../../node_modules/property-information/lib/util/case-sensitive-transform.js","../../node_modules/property-information/lib/util/case-insensitive-transform.js","../../node_modules/property-information/lib/xmlns.js","../../node_modules/property-information/lib/aria.js","../../node_modules/property-information/lib/html.js","../../node_modules/property-information/lib/svg.js","../../node_modules/property-information/lib/find.js","../../node_modules/property-information/lib/hast-to-react.js","../../node_modules/property-information/index.js","../../node_modules/react-markdown/lib/rehype-filter.js","../../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../../node_modules/react-markdown/node_modules/react-is/cjs/react-is.development.js","../../node_modules/react-markdown/node_modules/react-is/index.js","../../node_modules/hast-util-whitespace/index.js","../../node_modules/inline-style-parser/index.js","../../node_modules/style-to-object/index.js","../../node_modules/react-markdown/lib/ast-to-react.js","../../node_modules/comma-separated-tokens/index.js","../../node_modules/space-separated-tokens/index.js","../../node_modules/react-markdown/lib/react-markdown.js","../../node_modules/style-inject/dist/style-inject.es.js","../../src/components/markdown-viewer/MarkdownViewer.tsx","../../src/components/markdown-viewer/utils/replaceTermsWithValues.ts"],"sourcesContent":["const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {void}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {void}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(\n        effects,\n        contBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * Map of named character references.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntities = {\n  AElig: 'Æ',\n  AMP: '&',\n  Aacute: 'Á',\n  Abreve: 'Ă',\n  Acirc: 'Â',\n  Acy: 'А',\n  Afr: '𝔄',\n  Agrave: 'À',\n  Alpha: 'Α',\n  Amacr: 'Ā',\n  And: '⩓',\n  Aogon: 'Ą',\n  Aopf: '𝔸',\n  ApplyFunction: '⁡',\n  Aring: 'Å',\n  Ascr: '𝒜',\n  Assign: '≔',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Backslash: '∖',\n  Barv: '⫧',\n  Barwed: '⌆',\n  Bcy: 'Б',\n  Because: '∵',\n  Bernoullis: 'ℬ',\n  Beta: 'Β',\n  Bfr: '𝔅',\n  Bopf: '𝔹',\n  Breve: '˘',\n  Bscr: 'ℬ',\n  Bumpeq: '≎',\n  CHcy: 'Ч',\n  COPY: '©',\n  Cacute: 'Ć',\n  Cap: '⋒',\n  CapitalDifferentialD: 'ⅅ',\n  Cayleys: 'ℭ',\n  Ccaron: 'Č',\n  Ccedil: 'Ç',\n  Ccirc: 'Ĉ',\n  Cconint: '∰',\n  Cdot: 'Ċ',\n  Cedilla: '¸',\n  CenterDot: '·',\n  Cfr: 'ℭ',\n  Chi: 'Χ',\n  CircleDot: '⊙',\n  CircleMinus: '⊖',\n  CirclePlus: '⊕',\n  CircleTimes: '⊗',\n  ClockwiseContourIntegral: '∲',\n  CloseCurlyDoubleQuote: '”',\n  CloseCurlyQuote: '’',\n  Colon: '∷',\n  Colone: '⩴',\n  Congruent: '≡',\n  Conint: '∯',\n  ContourIntegral: '∮',\n  Copf: 'ℂ',\n  Coproduct: '∐',\n  CounterClockwiseContourIntegral: '∳',\n  Cross: '⨯',\n  Cscr: '𝒞',\n  Cup: '⋓',\n  CupCap: '≍',\n  DD: 'ⅅ',\n  DDotrahd: '⤑',\n  DJcy: 'Ђ',\n  DScy: 'Ѕ',\n  DZcy: 'Џ',\n  Dagger: '‡',\n  Darr: '↡',\n  Dashv: '⫤',\n  Dcaron: 'Ď',\n  Dcy: 'Д',\n  Del: '∇',\n  Delta: 'Δ',\n  Dfr: '𝔇',\n  DiacriticalAcute: '´',\n  DiacriticalDot: '˙',\n  DiacriticalDoubleAcute: '˝',\n  DiacriticalGrave: '`',\n  DiacriticalTilde: '˜',\n  Diamond: '⋄',\n  DifferentialD: 'ⅆ',\n  Dopf: '𝔻',\n  Dot: '¨',\n  DotDot: '⃜',\n  DotEqual: '≐',\n  DoubleContourIntegral: '∯',\n  DoubleDot: '¨',\n  DoubleDownArrow: '⇓',\n  DoubleLeftArrow: '⇐',\n  DoubleLeftRightArrow: '⇔',\n  DoubleLeftTee: '⫤',\n  DoubleLongLeftArrow: '⟸',\n  DoubleLongLeftRightArrow: '⟺',\n  DoubleLongRightArrow: '⟹',\n  DoubleRightArrow: '⇒',\n  DoubleRightTee: '⊨',\n  DoubleUpArrow: '⇑',\n  DoubleUpDownArrow: '⇕',\n  DoubleVerticalBar: '∥',\n  DownArrow: '↓',\n  DownArrowBar: '⤓',\n  DownArrowUpArrow: '⇵',\n  DownBreve: '̑',\n  DownLeftRightVector: '⥐',\n  DownLeftTeeVector: '⥞',\n  DownLeftVector: '↽',\n  DownLeftVectorBar: '⥖',\n  DownRightTeeVector: '⥟',\n  DownRightVector: '⇁',\n  DownRightVectorBar: '⥗',\n  DownTee: '⊤',\n  DownTeeArrow: '↧',\n  Downarrow: '⇓',\n  Dscr: '𝒟',\n  Dstrok: 'Đ',\n  ENG: 'Ŋ',\n  ETH: 'Ð',\n  Eacute: 'É',\n  Ecaron: 'Ě',\n  Ecirc: 'Ê',\n  Ecy: 'Э',\n  Edot: 'Ė',\n  Efr: '𝔈',\n  Egrave: 'È',\n  Element: '∈',\n  Emacr: 'Ē',\n  EmptySmallSquare: '◻',\n  EmptyVerySmallSquare: '▫',\n  Eogon: 'Ę',\n  Eopf: '𝔼',\n  Epsilon: 'Ε',\n  Equal: '⩵',\n  EqualTilde: '≂',\n  Equilibrium: '⇌',\n  Escr: 'ℰ',\n  Esim: '⩳',\n  Eta: 'Η',\n  Euml: 'Ë',\n  Exists: '∃',\n  ExponentialE: 'ⅇ',\n  Fcy: 'Ф',\n  Ffr: '𝔉',\n  FilledSmallSquare: '◼',\n  FilledVerySmallSquare: '▪',\n  Fopf: '𝔽',\n  ForAll: '∀',\n  Fouriertrf: 'ℱ',\n  Fscr: 'ℱ',\n  GJcy: 'Ѓ',\n  GT: '>',\n  Gamma: 'Γ',\n  Gammad: 'Ϝ',\n  Gbreve: 'Ğ',\n  Gcedil: 'Ģ',\n  Gcirc: 'Ĝ',\n  Gcy: 'Г',\n  Gdot: 'Ġ',\n  Gfr: '𝔊',\n  Gg: '⋙',\n  Gopf: '𝔾',\n  GreaterEqual: '≥',\n  GreaterEqualLess: '⋛',\n  GreaterFullEqual: '≧',\n  GreaterGreater: '⪢',\n  GreaterLess: '≷',\n  GreaterSlantEqual: '⩾',\n  GreaterTilde: '≳',\n  Gscr: '𝒢',\n  Gt: '≫',\n  HARDcy: 'Ъ',\n  Hacek: 'ˇ',\n  Hat: '^',\n  Hcirc: 'Ĥ',\n  Hfr: 'ℌ',\n  HilbertSpace: 'ℋ',\n  Hopf: 'ℍ',\n  HorizontalLine: '─',\n  Hscr: 'ℋ',\n  Hstrok: 'Ħ',\n  HumpDownHump: '≎',\n  HumpEqual: '≏',\n  IEcy: 'Е',\n  IJlig: 'Ĳ',\n  IOcy: 'Ё',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Icy: 'И',\n  Idot: 'İ',\n  Ifr: 'ℑ',\n  Igrave: 'Ì',\n  Im: 'ℑ',\n  Imacr: 'Ī',\n  ImaginaryI: 'ⅈ',\n  Implies: '⇒',\n  Int: '∬',\n  Integral: '∫',\n  Intersection: '⋂',\n  InvisibleComma: '⁣',\n  InvisibleTimes: '⁢',\n  Iogon: 'Į',\n  Iopf: '𝕀',\n  Iota: 'Ι',\n  Iscr: 'ℐ',\n  Itilde: 'Ĩ',\n  Iukcy: 'І',\n  Iuml: 'Ï',\n  Jcirc: 'Ĵ',\n  Jcy: 'Й',\n  Jfr: '𝔍',\n  Jopf: '𝕁',\n  Jscr: '𝒥',\n  Jsercy: 'Ј',\n  Jukcy: 'Є',\n  KHcy: 'Х',\n  KJcy: 'Ќ',\n  Kappa: 'Κ',\n  Kcedil: 'Ķ',\n  Kcy: 'К',\n  Kfr: '𝔎',\n  Kopf: '𝕂',\n  Kscr: '𝒦',\n  LJcy: 'Љ',\n  LT: '<',\n  Lacute: 'Ĺ',\n  Lambda: 'Λ',\n  Lang: '⟪',\n  Laplacetrf: 'ℒ',\n  Larr: '↞',\n  Lcaron: 'Ľ',\n  Lcedil: 'Ļ',\n  Lcy: 'Л',\n  LeftAngleBracket: '⟨',\n  LeftArrow: '←',\n  LeftArrowBar: '⇤',\n  LeftArrowRightArrow: '⇆',\n  LeftCeiling: '⌈',\n  LeftDoubleBracket: '⟦',\n  LeftDownTeeVector: '⥡',\n  LeftDownVector: '⇃',\n  LeftDownVectorBar: '⥙',\n  LeftFloor: '⌊',\n  LeftRightArrow: '↔',\n  LeftRightVector: '⥎',\n  LeftTee: '⊣',\n  LeftTeeArrow: '↤',\n  LeftTeeVector: '⥚',\n  LeftTriangle: '⊲',\n  LeftTriangleBar: '⧏',\n  LeftTriangleEqual: '⊴',\n  LeftUpDownVector: '⥑',\n  LeftUpTeeVector: '⥠',\n  LeftUpVector: '↿',\n  LeftUpVectorBar: '⥘',\n  LeftVector: '↼',\n  LeftVectorBar: '⥒',\n  Leftarrow: '⇐',\n  Leftrightarrow: '⇔',\n  LessEqualGreater: '⋚',\n  LessFullEqual: '≦',\n  LessGreater: '≶',\n  LessLess: '⪡',\n  LessSlantEqual: '⩽',\n  LessTilde: '≲',\n  Lfr: '𝔏',\n  Ll: '⋘',\n  Lleftarrow: '⇚',\n  Lmidot: 'Ŀ',\n  LongLeftArrow: '⟵',\n  LongLeftRightArrow: '⟷',\n  LongRightArrow: '⟶',\n  Longleftarrow: '⟸',\n  Longleftrightarrow: '⟺',\n  Longrightarrow: '⟹',\n  Lopf: '𝕃',\n  LowerLeftArrow: '↙',\n  LowerRightArrow: '↘',\n  Lscr: 'ℒ',\n  Lsh: '↰',\n  Lstrok: 'Ł',\n  Lt: '≪',\n  Map: '⤅',\n  Mcy: 'М',\n  MediumSpace: ' ',\n  Mellintrf: 'ℳ',\n  Mfr: '𝔐',\n  MinusPlus: '∓',\n  Mopf: '𝕄',\n  Mscr: 'ℳ',\n  Mu: 'Μ',\n  NJcy: 'Њ',\n  Nacute: 'Ń',\n  Ncaron: 'Ň',\n  Ncedil: 'Ņ',\n  Ncy: 'Н',\n  NegativeMediumSpace: '​',\n  NegativeThickSpace: '​',\n  NegativeThinSpace: '​',\n  NegativeVeryThinSpace: '​',\n  NestedGreaterGreater: '≫',\n  NestedLessLess: '≪',\n  NewLine: '\\n',\n  Nfr: '𝔑',\n  NoBreak: '⁠',\n  NonBreakingSpace: ' ',\n  Nopf: 'ℕ',\n  Not: '⫬',\n  NotCongruent: '≢',\n  NotCupCap: '≭',\n  NotDoubleVerticalBar: '∦',\n  NotElement: '∉',\n  NotEqual: '≠',\n  NotEqualTilde: '≂̸',\n  NotExists: '∄',\n  NotGreater: '≯',\n  NotGreaterEqual: '≱',\n  NotGreaterFullEqual: '≧̸',\n  NotGreaterGreater: '≫̸',\n  NotGreaterLess: '≹',\n  NotGreaterSlantEqual: '⩾̸',\n  NotGreaterTilde: '≵',\n  NotHumpDownHump: '≎̸',\n  NotHumpEqual: '≏̸',\n  NotLeftTriangle: '⋪',\n  NotLeftTriangleBar: '⧏̸',\n  NotLeftTriangleEqual: '⋬',\n  NotLess: '≮',\n  NotLessEqual: '≰',\n  NotLessGreater: '≸',\n  NotLessLess: '≪̸',\n  NotLessSlantEqual: '⩽̸',\n  NotLessTilde: '≴',\n  NotNestedGreaterGreater: '⪢̸',\n  NotNestedLessLess: '⪡̸',\n  NotPrecedes: '⊀',\n  NotPrecedesEqual: '⪯̸',\n  NotPrecedesSlantEqual: '⋠',\n  NotReverseElement: '∌',\n  NotRightTriangle: '⋫',\n  NotRightTriangleBar: '⧐̸',\n  NotRightTriangleEqual: '⋭',\n  NotSquareSubset: '⊏̸',\n  NotSquareSubsetEqual: '⋢',\n  NotSquareSuperset: '⊐̸',\n  NotSquareSupersetEqual: '⋣',\n  NotSubset: '⊂⃒',\n  NotSubsetEqual: '⊈',\n  NotSucceeds: '⊁',\n  NotSucceedsEqual: '⪰̸',\n  NotSucceedsSlantEqual: '⋡',\n  NotSucceedsTilde: '≿̸',\n  NotSuperset: '⊃⃒',\n  NotSupersetEqual: '⊉',\n  NotTilde: '≁',\n  NotTildeEqual: '≄',\n  NotTildeFullEqual: '≇',\n  NotTildeTilde: '≉',\n  NotVerticalBar: '∤',\n  Nscr: '𝒩',\n  Ntilde: 'Ñ',\n  Nu: 'Ν',\n  OElig: 'Œ',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Ocy: 'О',\n  Odblac: 'Ő',\n  Ofr: '𝔒',\n  Ograve: 'Ò',\n  Omacr: 'Ō',\n  Omega: 'Ω',\n  Omicron: 'Ο',\n  Oopf: '𝕆',\n  OpenCurlyDoubleQuote: '“',\n  OpenCurlyQuote: '‘',\n  Or: '⩔',\n  Oscr: '𝒪',\n  Oslash: 'Ø',\n  Otilde: 'Õ',\n  Otimes: '⨷',\n  Ouml: 'Ö',\n  OverBar: '‾',\n  OverBrace: '⏞',\n  OverBracket: '⎴',\n  OverParenthesis: '⏜',\n  PartialD: '∂',\n  Pcy: 'П',\n  Pfr: '𝔓',\n  Phi: 'Φ',\n  Pi: 'Π',\n  PlusMinus: '±',\n  Poincareplane: 'ℌ',\n  Popf: 'ℙ',\n  Pr: '⪻',\n  Precedes: '≺',\n  PrecedesEqual: '⪯',\n  PrecedesSlantEqual: '≼',\n  PrecedesTilde: '≾',\n  Prime: '″',\n  Product: '∏',\n  Proportion: '∷',\n  Proportional: '∝',\n  Pscr: '𝒫',\n  Psi: 'Ψ',\n  QUOT: '\"',\n  Qfr: '𝔔',\n  Qopf: 'ℚ',\n  Qscr: '𝒬',\n  RBarr: '⤐',\n  REG: '®',\n  Racute: 'Ŕ',\n  Rang: '⟫',\n  Rarr: '↠',\n  Rarrtl: '⤖',\n  Rcaron: 'Ř',\n  Rcedil: 'Ŗ',\n  Rcy: 'Р',\n  Re: 'ℜ',\n  ReverseElement: '∋',\n  ReverseEquilibrium: '⇋',\n  ReverseUpEquilibrium: '⥯',\n  Rfr: 'ℜ',\n  Rho: 'Ρ',\n  RightAngleBracket: '⟩',\n  RightArrow: '→',\n  RightArrowBar: '⇥',\n  RightArrowLeftArrow: '⇄',\n  RightCeiling: '⌉',\n  RightDoubleBracket: '⟧',\n  RightDownTeeVector: '⥝',\n  RightDownVector: '⇂',\n  RightDownVectorBar: '⥕',\n  RightFloor: '⌋',\n  RightTee: '⊢',\n  RightTeeArrow: '↦',\n  RightTeeVector: '⥛',\n  RightTriangle: '⊳',\n  RightTriangleBar: '⧐',\n  RightTriangleEqual: '⊵',\n  RightUpDownVector: '⥏',\n  RightUpTeeVector: '⥜',\n  RightUpVector: '↾',\n  RightUpVectorBar: '⥔',\n  RightVector: '⇀',\n  RightVectorBar: '⥓',\n  Rightarrow: '⇒',\n  Ropf: 'ℝ',\n  RoundImplies: '⥰',\n  Rrightarrow: '⇛',\n  Rscr: 'ℛ',\n  Rsh: '↱',\n  RuleDelayed: '⧴',\n  SHCHcy: 'Щ',\n  SHcy: 'Ш',\n  SOFTcy: 'Ь',\n  Sacute: 'Ś',\n  Sc: '⪼',\n  Scaron: 'Š',\n  Scedil: 'Ş',\n  Scirc: 'Ŝ',\n  Scy: 'С',\n  Sfr: '𝔖',\n  ShortDownArrow: '↓',\n  ShortLeftArrow: '←',\n  ShortRightArrow: '→',\n  ShortUpArrow: '↑',\n  Sigma: 'Σ',\n  SmallCircle: '∘',\n  Sopf: '𝕊',\n  Sqrt: '√',\n  Square: '□',\n  SquareIntersection: '⊓',\n  SquareSubset: '⊏',\n  SquareSubsetEqual: '⊑',\n  SquareSuperset: '⊐',\n  SquareSupersetEqual: '⊒',\n  SquareUnion: '⊔',\n  Sscr: '𝒮',\n  Star: '⋆',\n  Sub: '⋐',\n  Subset: '⋐',\n  SubsetEqual: '⊆',\n  Succeeds: '≻',\n  SucceedsEqual: '⪰',\n  SucceedsSlantEqual: '≽',\n  SucceedsTilde: '≿',\n  SuchThat: '∋',\n  Sum: '∑',\n  Sup: '⋑',\n  Superset: '⊃',\n  SupersetEqual: '⊇',\n  Supset: '⋑',\n  THORN: 'Þ',\n  TRADE: '™',\n  TSHcy: 'Ћ',\n  TScy: 'Ц',\n  Tab: '\\t',\n  Tau: 'Τ',\n  Tcaron: 'Ť',\n  Tcedil: 'Ţ',\n  Tcy: 'Т',\n  Tfr: '𝔗',\n  Therefore: '∴',\n  Theta: 'Θ',\n  ThickSpace: '  ',\n  ThinSpace: ' ',\n  Tilde: '∼',\n  TildeEqual: '≃',\n  TildeFullEqual: '≅',\n  TildeTilde: '≈',\n  Topf: '𝕋',\n  TripleDot: '⃛',\n  Tscr: '𝒯',\n  Tstrok: 'Ŧ',\n  Uacute: 'Ú',\n  Uarr: '↟',\n  Uarrocir: '⥉',\n  Ubrcy: 'Ў',\n  Ubreve: 'Ŭ',\n  Ucirc: 'Û',\n  Ucy: 'У',\n  Udblac: 'Ű',\n  Ufr: '𝔘',\n  Ugrave: 'Ù',\n  Umacr: 'Ū',\n  UnderBar: '_',\n  UnderBrace: '⏟',\n  UnderBracket: '⎵',\n  UnderParenthesis: '⏝',\n  Union: '⋃',\n  UnionPlus: '⊎',\n  Uogon: 'Ų',\n  Uopf: '𝕌',\n  UpArrow: '↑',\n  UpArrowBar: '⤒',\n  UpArrowDownArrow: '⇅',\n  UpDownArrow: '↕',\n  UpEquilibrium: '⥮',\n  UpTee: '⊥',\n  UpTeeArrow: '↥',\n  Uparrow: '⇑',\n  Updownarrow: '⇕',\n  UpperLeftArrow: '↖',\n  UpperRightArrow: '↗',\n  Upsi: 'ϒ',\n  Upsilon: 'Υ',\n  Uring: 'Ů',\n  Uscr: '𝒰',\n  Utilde: 'Ũ',\n  Uuml: 'Ü',\n  VDash: '⊫',\n  Vbar: '⫫',\n  Vcy: 'В',\n  Vdash: '⊩',\n  Vdashl: '⫦',\n  Vee: '⋁',\n  Verbar: '‖',\n  Vert: '‖',\n  VerticalBar: '∣',\n  VerticalLine: '|',\n  VerticalSeparator: '❘',\n  VerticalTilde: '≀',\n  VeryThinSpace: ' ',\n  Vfr: '𝔙',\n  Vopf: '𝕍',\n  Vscr: '𝒱',\n  Vvdash: '⊪',\n  Wcirc: 'Ŵ',\n  Wedge: '⋀',\n  Wfr: '𝔚',\n  Wopf: '𝕎',\n  Wscr: '𝒲',\n  Xfr: '𝔛',\n  Xi: 'Ξ',\n  Xopf: '𝕏',\n  Xscr: '𝒳',\n  YAcy: 'Я',\n  YIcy: 'Ї',\n  YUcy: 'Ю',\n  Yacute: 'Ý',\n  Ycirc: 'Ŷ',\n  Ycy: 'Ы',\n  Yfr: '𝔜',\n  Yopf: '𝕐',\n  Yscr: '𝒴',\n  Yuml: 'Ÿ',\n  ZHcy: 'Ж',\n  Zacute: 'Ź',\n  Zcaron: 'Ž',\n  Zcy: 'З',\n  Zdot: 'Ż',\n  ZeroWidthSpace: '​',\n  Zeta: 'Ζ',\n  Zfr: 'ℨ',\n  Zopf: 'ℤ',\n  Zscr: '𝒵',\n  aacute: 'á',\n  abreve: 'ă',\n  ac: '∾',\n  acE: '∾̳',\n  acd: '∿',\n  acirc: 'â',\n  acute: '´',\n  acy: 'а',\n  aelig: 'æ',\n  af: '⁡',\n  afr: '𝔞',\n  agrave: 'à',\n  alefsym: 'ℵ',\n  aleph: 'ℵ',\n  alpha: 'α',\n  amacr: 'ā',\n  amalg: '⨿',\n  amp: '&',\n  and: '∧',\n  andand: '⩕',\n  andd: '⩜',\n  andslope: '⩘',\n  andv: '⩚',\n  ang: '∠',\n  ange: '⦤',\n  angle: '∠',\n  angmsd: '∡',\n  angmsdaa: '⦨',\n  angmsdab: '⦩',\n  angmsdac: '⦪',\n  angmsdad: '⦫',\n  angmsdae: '⦬',\n  angmsdaf: '⦭',\n  angmsdag: '⦮',\n  angmsdah: '⦯',\n  angrt: '∟',\n  angrtvb: '⊾',\n  angrtvbd: '⦝',\n  angsph: '∢',\n  angst: 'Å',\n  angzarr: '⍼',\n  aogon: 'ą',\n  aopf: '𝕒',\n  ap: '≈',\n  apE: '⩰',\n  apacir: '⩯',\n  ape: '≊',\n  apid: '≋',\n  apos: \"'\",\n  approx: '≈',\n  approxeq: '≊',\n  aring: 'å',\n  ascr: '𝒶',\n  ast: '*',\n  asymp: '≈',\n  asympeq: '≍',\n  atilde: 'ã',\n  auml: 'ä',\n  awconint: '∳',\n  awint: '⨑',\n  bNot: '⫭',\n  backcong: '≌',\n  backepsilon: '϶',\n  backprime: '‵',\n  backsim: '∽',\n  backsimeq: '⋍',\n  barvee: '⊽',\n  barwed: '⌅',\n  barwedge: '⌅',\n  bbrk: '⎵',\n  bbrktbrk: '⎶',\n  bcong: '≌',\n  bcy: 'б',\n  bdquo: '„',\n  becaus: '∵',\n  because: '∵',\n  bemptyv: '⦰',\n  bepsi: '϶',\n  bernou: 'ℬ',\n  beta: 'β',\n  beth: 'ℶ',\n  between: '≬',\n  bfr: '𝔟',\n  bigcap: '⋂',\n  bigcirc: '◯',\n  bigcup: '⋃',\n  bigodot: '⨀',\n  bigoplus: '⨁',\n  bigotimes: '⨂',\n  bigsqcup: '⨆',\n  bigstar: '★',\n  bigtriangledown: '▽',\n  bigtriangleup: '△',\n  biguplus: '⨄',\n  bigvee: '⋁',\n  bigwedge: '⋀',\n  bkarow: '⤍',\n  blacklozenge: '⧫',\n  blacksquare: '▪',\n  blacktriangle: '▴',\n  blacktriangledown: '▾',\n  blacktriangleleft: '◂',\n  blacktriangleright: '▸',\n  blank: '␣',\n  blk12: '▒',\n  blk14: '░',\n  blk34: '▓',\n  block: '█',\n  bne: '=⃥',\n  bnequiv: '≡⃥',\n  bnot: '⌐',\n  bopf: '𝕓',\n  bot: '⊥',\n  bottom: '⊥',\n  bowtie: '⋈',\n  boxDL: '╗',\n  boxDR: '╔',\n  boxDl: '╖',\n  boxDr: '╓',\n  boxH: '═',\n  boxHD: '╦',\n  boxHU: '╩',\n  boxHd: '╤',\n  boxHu: '╧',\n  boxUL: '╝',\n  boxUR: '╚',\n  boxUl: '╜',\n  boxUr: '╙',\n  boxV: '║',\n  boxVH: '╬',\n  boxVL: '╣',\n  boxVR: '╠',\n  boxVh: '╫',\n  boxVl: '╢',\n  boxVr: '╟',\n  boxbox: '⧉',\n  boxdL: '╕',\n  boxdR: '╒',\n  boxdl: '┐',\n  boxdr: '┌',\n  boxh: '─',\n  boxhD: '╥',\n  boxhU: '╨',\n  boxhd: '┬',\n  boxhu: '┴',\n  boxminus: '⊟',\n  boxplus: '⊞',\n  boxtimes: '⊠',\n  boxuL: '╛',\n  boxuR: '╘',\n  boxul: '┘',\n  boxur: '└',\n  boxv: '│',\n  boxvH: '╪',\n  boxvL: '╡',\n  boxvR: '╞',\n  boxvh: '┼',\n  boxvl: '┤',\n  boxvr: '├',\n  bprime: '‵',\n  breve: '˘',\n  brvbar: '¦',\n  bscr: '𝒷',\n  bsemi: '⁏',\n  bsim: '∽',\n  bsime: '⋍',\n  bsol: '\\\\',\n  bsolb: '⧅',\n  bsolhsub: '⟈',\n  bull: '•',\n  bullet: '•',\n  bump: '≎',\n  bumpE: '⪮',\n  bumpe: '≏',\n  bumpeq: '≏',\n  cacute: 'ć',\n  cap: '∩',\n  capand: '⩄',\n  capbrcup: '⩉',\n  capcap: '⩋',\n  capcup: '⩇',\n  capdot: '⩀',\n  caps: '∩︀',\n  caret: '⁁',\n  caron: 'ˇ',\n  ccaps: '⩍',\n  ccaron: 'č',\n  ccedil: 'ç',\n  ccirc: 'ĉ',\n  ccups: '⩌',\n  ccupssm: '⩐',\n  cdot: 'ċ',\n  cedil: '¸',\n  cemptyv: '⦲',\n  cent: '¢',\n  centerdot: '·',\n  cfr: '𝔠',\n  chcy: 'ч',\n  check: '✓',\n  checkmark: '✓',\n  chi: 'χ',\n  cir: '○',\n  cirE: '⧃',\n  circ: 'ˆ',\n  circeq: '≗',\n  circlearrowleft: '↺',\n  circlearrowright: '↻',\n  circledR: '®',\n  circledS: 'Ⓢ',\n  circledast: '⊛',\n  circledcirc: '⊚',\n  circleddash: '⊝',\n  cire: '≗',\n  cirfnint: '⨐',\n  cirmid: '⫯',\n  cirscir: '⧂',\n  clubs: '♣',\n  clubsuit: '♣',\n  colon: ':',\n  colone: '≔',\n  coloneq: '≔',\n  comma: ',',\n  commat: '@',\n  comp: '∁',\n  compfn: '∘',\n  complement: '∁',\n  complexes: 'ℂ',\n  cong: '≅',\n  congdot: '⩭',\n  conint: '∮',\n  copf: '𝕔',\n  coprod: '∐',\n  copy: '©',\n  copysr: '℗',\n  crarr: '↵',\n  cross: '✗',\n  cscr: '𝒸',\n  csub: '⫏',\n  csube: '⫑',\n  csup: '⫐',\n  csupe: '⫒',\n  ctdot: '⋯',\n  cudarrl: '⤸',\n  cudarrr: '⤵',\n  cuepr: '⋞',\n  cuesc: '⋟',\n  cularr: '↶',\n  cularrp: '⤽',\n  cup: '∪',\n  cupbrcap: '⩈',\n  cupcap: '⩆',\n  cupcup: '⩊',\n  cupdot: '⊍',\n  cupor: '⩅',\n  cups: '∪︀',\n  curarr: '↷',\n  curarrm: '⤼',\n  curlyeqprec: '⋞',\n  curlyeqsucc: '⋟',\n  curlyvee: '⋎',\n  curlywedge: '⋏',\n  curren: '¤',\n  curvearrowleft: '↶',\n  curvearrowright: '↷',\n  cuvee: '⋎',\n  cuwed: '⋏',\n  cwconint: '∲',\n  cwint: '∱',\n  cylcty: '⌭',\n  dArr: '⇓',\n  dHar: '⥥',\n  dagger: '†',\n  daleth: 'ℸ',\n  darr: '↓',\n  dash: '‐',\n  dashv: '⊣',\n  dbkarow: '⤏',\n  dblac: '˝',\n  dcaron: 'ď',\n  dcy: 'д',\n  dd: 'ⅆ',\n  ddagger: '‡',\n  ddarr: '⇊',\n  ddotseq: '⩷',\n  deg: '°',\n  delta: 'δ',\n  demptyv: '⦱',\n  dfisht: '⥿',\n  dfr: '𝔡',\n  dharl: '⇃',\n  dharr: '⇂',\n  diam: '⋄',\n  diamond: '⋄',\n  diamondsuit: '♦',\n  diams: '♦',\n  die: '¨',\n  digamma: 'ϝ',\n  disin: '⋲',\n  div: '÷',\n  divide: '÷',\n  divideontimes: '⋇',\n  divonx: '⋇',\n  djcy: 'ђ',\n  dlcorn: '⌞',\n  dlcrop: '⌍',\n  dollar: '$',\n  dopf: '𝕕',\n  dot: '˙',\n  doteq: '≐',\n  doteqdot: '≑',\n  dotminus: '∸',\n  dotplus: '∔',\n  dotsquare: '⊡',\n  doublebarwedge: '⌆',\n  downarrow: '↓',\n  downdownarrows: '⇊',\n  downharpoonleft: '⇃',\n  downharpoonright: '⇂',\n  drbkarow: '⤐',\n  drcorn: '⌟',\n  drcrop: '⌌',\n  dscr: '𝒹',\n  dscy: 'ѕ',\n  dsol: '⧶',\n  dstrok: 'đ',\n  dtdot: '⋱',\n  dtri: '▿',\n  dtrif: '▾',\n  duarr: '⇵',\n  duhar: '⥯',\n  dwangle: '⦦',\n  dzcy: 'џ',\n  dzigrarr: '⟿',\n  eDDot: '⩷',\n  eDot: '≑',\n  eacute: 'é',\n  easter: '⩮',\n  ecaron: 'ě',\n  ecir: '≖',\n  ecirc: 'ê',\n  ecolon: '≕',\n  ecy: 'э',\n  edot: 'ė',\n  ee: 'ⅇ',\n  efDot: '≒',\n  efr: '𝔢',\n  eg: '⪚',\n  egrave: 'è',\n  egs: '⪖',\n  egsdot: '⪘',\n  el: '⪙',\n  elinters: '⏧',\n  ell: 'ℓ',\n  els: '⪕',\n  elsdot: '⪗',\n  emacr: 'ē',\n  empty: '∅',\n  emptyset: '∅',\n  emptyv: '∅',\n  emsp13: ' ',\n  emsp14: ' ',\n  emsp: ' ',\n  eng: 'ŋ',\n  ensp: ' ',\n  eogon: 'ę',\n  eopf: '𝕖',\n  epar: '⋕',\n  eparsl: '⧣',\n  eplus: '⩱',\n  epsi: 'ε',\n  epsilon: 'ε',\n  epsiv: 'ϵ',\n  eqcirc: '≖',\n  eqcolon: '≕',\n  eqsim: '≂',\n  eqslantgtr: '⪖',\n  eqslantless: '⪕',\n  equals: '=',\n  equest: '≟',\n  equiv: '≡',\n  equivDD: '⩸',\n  eqvparsl: '⧥',\n  erDot: '≓',\n  erarr: '⥱',\n  escr: 'ℯ',\n  esdot: '≐',\n  esim: '≂',\n  eta: 'η',\n  eth: 'ð',\n  euml: 'ë',\n  euro: '€',\n  excl: '!',\n  exist: '∃',\n  expectation: 'ℰ',\n  exponentiale: 'ⅇ',\n  fallingdotseq: '≒',\n  fcy: 'ф',\n  female: '♀',\n  ffilig: 'ﬃ',\n  fflig: 'ﬀ',\n  ffllig: 'ﬄ',\n  ffr: '𝔣',\n  filig: 'ﬁ',\n  fjlig: 'fj',\n  flat: '♭',\n  fllig: 'ﬂ',\n  fltns: '▱',\n  fnof: 'ƒ',\n  fopf: '𝕗',\n  forall: '∀',\n  fork: '⋔',\n  forkv: '⫙',\n  fpartint: '⨍',\n  frac12: '½',\n  frac13: '⅓',\n  frac14: '¼',\n  frac15: '⅕',\n  frac16: '⅙',\n  frac18: '⅛',\n  frac23: '⅔',\n  frac25: '⅖',\n  frac34: '¾',\n  frac35: '⅗',\n  frac38: '⅜',\n  frac45: '⅘',\n  frac56: '⅚',\n  frac58: '⅝',\n  frac78: '⅞',\n  frasl: '⁄',\n  frown: '⌢',\n  fscr: '𝒻',\n  gE: '≧',\n  gEl: '⪌',\n  gacute: 'ǵ',\n  gamma: 'γ',\n  gammad: 'ϝ',\n  gap: '⪆',\n  gbreve: 'ğ',\n  gcirc: 'ĝ',\n  gcy: 'г',\n  gdot: 'ġ',\n  ge: '≥',\n  gel: '⋛',\n  geq: '≥',\n  geqq: '≧',\n  geqslant: '⩾',\n  ges: '⩾',\n  gescc: '⪩',\n  gesdot: '⪀',\n  gesdoto: '⪂',\n  gesdotol: '⪄',\n  gesl: '⋛︀',\n  gesles: '⪔',\n  gfr: '𝔤',\n  gg: '≫',\n  ggg: '⋙',\n  gimel: 'ℷ',\n  gjcy: 'ѓ',\n  gl: '≷',\n  glE: '⪒',\n  gla: '⪥',\n  glj: '⪤',\n  gnE: '≩',\n  gnap: '⪊',\n  gnapprox: '⪊',\n  gne: '⪈',\n  gneq: '⪈',\n  gneqq: '≩',\n  gnsim: '⋧',\n  gopf: '𝕘',\n  grave: '`',\n  gscr: 'ℊ',\n  gsim: '≳',\n  gsime: '⪎',\n  gsiml: '⪐',\n  gt: '>',\n  gtcc: '⪧',\n  gtcir: '⩺',\n  gtdot: '⋗',\n  gtlPar: '⦕',\n  gtquest: '⩼',\n  gtrapprox: '⪆',\n  gtrarr: '⥸',\n  gtrdot: '⋗',\n  gtreqless: '⋛',\n  gtreqqless: '⪌',\n  gtrless: '≷',\n  gtrsim: '≳',\n  gvertneqq: '≩︀',\n  gvnE: '≩︀',\n  hArr: '⇔',\n  hairsp: ' ',\n  half: '½',\n  hamilt: 'ℋ',\n  hardcy: 'ъ',\n  harr: '↔',\n  harrcir: '⥈',\n  harrw: '↭',\n  hbar: 'ℏ',\n  hcirc: 'ĥ',\n  hearts: '♥',\n  heartsuit: '♥',\n  hellip: '…',\n  hercon: '⊹',\n  hfr: '𝔥',\n  hksearow: '⤥',\n  hkswarow: '⤦',\n  hoarr: '⇿',\n  homtht: '∻',\n  hookleftarrow: '↩',\n  hookrightarrow: '↪',\n  hopf: '𝕙',\n  horbar: '―',\n  hscr: '𝒽',\n  hslash: 'ℏ',\n  hstrok: 'ħ',\n  hybull: '⁃',\n  hyphen: '‐',\n  iacute: 'í',\n  ic: '⁣',\n  icirc: 'î',\n  icy: 'и',\n  iecy: 'е',\n  iexcl: '¡',\n  iff: '⇔',\n  ifr: '𝔦',\n  igrave: 'ì',\n  ii: 'ⅈ',\n  iiiint: '⨌',\n  iiint: '∭',\n  iinfin: '⧜',\n  iiota: '℩',\n  ijlig: 'ĳ',\n  imacr: 'ī',\n  image: 'ℑ',\n  imagline: 'ℐ',\n  imagpart: 'ℑ',\n  imath: 'ı',\n  imof: '⊷',\n  imped: 'Ƶ',\n  in: '∈',\n  incare: '℅',\n  infin: '∞',\n  infintie: '⧝',\n  inodot: 'ı',\n  int: '∫',\n  intcal: '⊺',\n  integers: 'ℤ',\n  intercal: '⊺',\n  intlarhk: '⨗',\n  intprod: '⨼',\n  iocy: 'ё',\n  iogon: 'į',\n  iopf: '𝕚',\n  iota: 'ι',\n  iprod: '⨼',\n  iquest: '¿',\n  iscr: '𝒾',\n  isin: '∈',\n  isinE: '⋹',\n  isindot: '⋵',\n  isins: '⋴',\n  isinsv: '⋳',\n  isinv: '∈',\n  it: '⁢',\n  itilde: 'ĩ',\n  iukcy: 'і',\n  iuml: 'ï',\n  jcirc: 'ĵ',\n  jcy: 'й',\n  jfr: '𝔧',\n  jmath: 'ȷ',\n  jopf: '𝕛',\n  jscr: '𝒿',\n  jsercy: 'ј',\n  jukcy: 'є',\n  kappa: 'κ',\n  kappav: 'ϰ',\n  kcedil: 'ķ',\n  kcy: 'к',\n  kfr: '𝔨',\n  kgreen: 'ĸ',\n  khcy: 'х',\n  kjcy: 'ќ',\n  kopf: '𝕜',\n  kscr: '𝓀',\n  lAarr: '⇚',\n  lArr: '⇐',\n  lAtail: '⤛',\n  lBarr: '⤎',\n  lE: '≦',\n  lEg: '⪋',\n  lHar: '⥢',\n  lacute: 'ĺ',\n  laemptyv: '⦴',\n  lagran: 'ℒ',\n  lambda: 'λ',\n  lang: '⟨',\n  langd: '⦑',\n  langle: '⟨',\n  lap: '⪅',\n  laquo: '«',\n  larr: '←',\n  larrb: '⇤',\n  larrbfs: '⤟',\n  larrfs: '⤝',\n  larrhk: '↩',\n  larrlp: '↫',\n  larrpl: '⤹',\n  larrsim: '⥳',\n  larrtl: '↢',\n  lat: '⪫',\n  latail: '⤙',\n  late: '⪭',\n  lates: '⪭︀',\n  lbarr: '⤌',\n  lbbrk: '❲',\n  lbrace: '{',\n  lbrack: '[',\n  lbrke: '⦋',\n  lbrksld: '⦏',\n  lbrkslu: '⦍',\n  lcaron: 'ľ',\n  lcedil: 'ļ',\n  lceil: '⌈',\n  lcub: '{',\n  lcy: 'л',\n  ldca: '⤶',\n  ldquo: '“',\n  ldquor: '„',\n  ldrdhar: '⥧',\n  ldrushar: '⥋',\n  ldsh: '↲',\n  le: '≤',\n  leftarrow: '←',\n  leftarrowtail: '↢',\n  leftharpoondown: '↽',\n  leftharpoonup: '↼',\n  leftleftarrows: '⇇',\n  leftrightarrow: '↔',\n  leftrightarrows: '⇆',\n  leftrightharpoons: '⇋',\n  leftrightsquigarrow: '↭',\n  leftthreetimes: '⋋',\n  leg: '⋚',\n  leq: '≤',\n  leqq: '≦',\n  leqslant: '⩽',\n  les: '⩽',\n  lescc: '⪨',\n  lesdot: '⩿',\n  lesdoto: '⪁',\n  lesdotor: '⪃',\n  lesg: '⋚︀',\n  lesges: '⪓',\n  lessapprox: '⪅',\n  lessdot: '⋖',\n  lesseqgtr: '⋚',\n  lesseqqgtr: '⪋',\n  lessgtr: '≶',\n  lesssim: '≲',\n  lfisht: '⥼',\n  lfloor: '⌊',\n  lfr: '𝔩',\n  lg: '≶',\n  lgE: '⪑',\n  lhard: '↽',\n  lharu: '↼',\n  lharul: '⥪',\n  lhblk: '▄',\n  ljcy: 'љ',\n  ll: '≪',\n  llarr: '⇇',\n  llcorner: '⌞',\n  llhard: '⥫',\n  lltri: '◺',\n  lmidot: 'ŀ',\n  lmoust: '⎰',\n  lmoustache: '⎰',\n  lnE: '≨',\n  lnap: '⪉',\n  lnapprox: '⪉',\n  lne: '⪇',\n  lneq: '⪇',\n  lneqq: '≨',\n  lnsim: '⋦',\n  loang: '⟬',\n  loarr: '⇽',\n  lobrk: '⟦',\n  longleftarrow: '⟵',\n  longleftrightarrow: '⟷',\n  longmapsto: '⟼',\n  longrightarrow: '⟶',\n  looparrowleft: '↫',\n  looparrowright: '↬',\n  lopar: '⦅',\n  lopf: '𝕝',\n  loplus: '⨭',\n  lotimes: '⨴',\n  lowast: '∗',\n  lowbar: '_',\n  loz: '◊',\n  lozenge: '◊',\n  lozf: '⧫',\n  lpar: '(',\n  lparlt: '⦓',\n  lrarr: '⇆',\n  lrcorner: '⌟',\n  lrhar: '⇋',\n  lrhard: '⥭',\n  lrm: '‎',\n  lrtri: '⊿',\n  lsaquo: '‹',\n  lscr: '𝓁',\n  lsh: '↰',\n  lsim: '≲',\n  lsime: '⪍',\n  lsimg: '⪏',\n  lsqb: '[',\n  lsquo: '‘',\n  lsquor: '‚',\n  lstrok: 'ł',\n  lt: '<',\n  ltcc: '⪦',\n  ltcir: '⩹',\n  ltdot: '⋖',\n  lthree: '⋋',\n  ltimes: '⋉',\n  ltlarr: '⥶',\n  ltquest: '⩻',\n  ltrPar: '⦖',\n  ltri: '◃',\n  ltrie: '⊴',\n  ltrif: '◂',\n  lurdshar: '⥊',\n  luruhar: '⥦',\n  lvertneqq: '≨︀',\n  lvnE: '≨︀',\n  mDDot: '∺',\n  macr: '¯',\n  male: '♂',\n  malt: '✠',\n  maltese: '✠',\n  map: '↦',\n  mapsto: '↦',\n  mapstodown: '↧',\n  mapstoleft: '↤',\n  mapstoup: '↥',\n  marker: '▮',\n  mcomma: '⨩',\n  mcy: 'м',\n  mdash: '—',\n  measuredangle: '∡',\n  mfr: '𝔪',\n  mho: '℧',\n  micro: 'µ',\n  mid: '∣',\n  midast: '*',\n  midcir: '⫰',\n  middot: '·',\n  minus: '−',\n  minusb: '⊟',\n  minusd: '∸',\n  minusdu: '⨪',\n  mlcp: '⫛',\n  mldr: '…',\n  mnplus: '∓',\n  models: '⊧',\n  mopf: '𝕞',\n  mp: '∓',\n  mscr: '𝓂',\n  mstpos: '∾',\n  mu: 'μ',\n  multimap: '⊸',\n  mumap: '⊸',\n  nGg: '⋙̸',\n  nGt: '≫⃒',\n  nGtv: '≫̸',\n  nLeftarrow: '⇍',\n  nLeftrightarrow: '⇎',\n  nLl: '⋘̸',\n  nLt: '≪⃒',\n  nLtv: '≪̸',\n  nRightarrow: '⇏',\n  nVDash: '⊯',\n  nVdash: '⊮',\n  nabla: '∇',\n  nacute: 'ń',\n  nang: '∠⃒',\n  nap: '≉',\n  napE: '⩰̸',\n  napid: '≋̸',\n  napos: 'ŉ',\n  napprox: '≉',\n  natur: '♮',\n  natural: '♮',\n  naturals: 'ℕ',\n  nbsp: ' ',\n  nbump: '≎̸',\n  nbumpe: '≏̸',\n  ncap: '⩃',\n  ncaron: 'ň',\n  ncedil: 'ņ',\n  ncong: '≇',\n  ncongdot: '⩭̸',\n  ncup: '⩂',\n  ncy: 'н',\n  ndash: '–',\n  ne: '≠',\n  neArr: '⇗',\n  nearhk: '⤤',\n  nearr: '↗',\n  nearrow: '↗',\n  nedot: '≐̸',\n  nequiv: '≢',\n  nesear: '⤨',\n  nesim: '≂̸',\n  nexist: '∄',\n  nexists: '∄',\n  nfr: '𝔫',\n  ngE: '≧̸',\n  nge: '≱',\n  ngeq: '≱',\n  ngeqq: '≧̸',\n  ngeqslant: '⩾̸',\n  nges: '⩾̸',\n  ngsim: '≵',\n  ngt: '≯',\n  ngtr: '≯',\n  nhArr: '⇎',\n  nharr: '↮',\n  nhpar: '⫲',\n  ni: '∋',\n  nis: '⋼',\n  nisd: '⋺',\n  niv: '∋',\n  njcy: 'њ',\n  nlArr: '⇍',\n  nlE: '≦̸',\n  nlarr: '↚',\n  nldr: '‥',\n  nle: '≰',\n  nleftarrow: '↚',\n  nleftrightarrow: '↮',\n  nleq: '≰',\n  nleqq: '≦̸',\n  nleqslant: '⩽̸',\n  nles: '⩽̸',\n  nless: '≮',\n  nlsim: '≴',\n  nlt: '≮',\n  nltri: '⋪',\n  nltrie: '⋬',\n  nmid: '∤',\n  nopf: '𝕟',\n  not: '¬',\n  notin: '∉',\n  notinE: '⋹̸',\n  notindot: '⋵̸',\n  notinva: '∉',\n  notinvb: '⋷',\n  notinvc: '⋶',\n  notni: '∌',\n  notniva: '∌',\n  notnivb: '⋾',\n  notnivc: '⋽',\n  npar: '∦',\n  nparallel: '∦',\n  nparsl: '⫽⃥',\n  npart: '∂̸',\n  npolint: '⨔',\n  npr: '⊀',\n  nprcue: '⋠',\n  npre: '⪯̸',\n  nprec: '⊀',\n  npreceq: '⪯̸',\n  nrArr: '⇏',\n  nrarr: '↛',\n  nrarrc: '⤳̸',\n  nrarrw: '↝̸',\n  nrightarrow: '↛',\n  nrtri: '⋫',\n  nrtrie: '⋭',\n  nsc: '⊁',\n  nsccue: '⋡',\n  nsce: '⪰̸',\n  nscr: '𝓃',\n  nshortmid: '∤',\n  nshortparallel: '∦',\n  nsim: '≁',\n  nsime: '≄',\n  nsimeq: '≄',\n  nsmid: '∤',\n  nspar: '∦',\n  nsqsube: '⋢',\n  nsqsupe: '⋣',\n  nsub: '⊄',\n  nsubE: '⫅̸',\n  nsube: '⊈',\n  nsubset: '⊂⃒',\n  nsubseteq: '⊈',\n  nsubseteqq: '⫅̸',\n  nsucc: '⊁',\n  nsucceq: '⪰̸',\n  nsup: '⊅',\n  nsupE: '⫆̸',\n  nsupe: '⊉',\n  nsupset: '⊃⃒',\n  nsupseteq: '⊉',\n  nsupseteqq: '⫆̸',\n  ntgl: '≹',\n  ntilde: 'ñ',\n  ntlg: '≸',\n  ntriangleleft: '⋪',\n  ntrianglelefteq: '⋬',\n  ntriangleright: '⋫',\n  ntrianglerighteq: '⋭',\n  nu: 'ν',\n  num: '#',\n  numero: '№',\n  numsp: ' ',\n  nvDash: '⊭',\n  nvHarr: '⤄',\n  nvap: '≍⃒',\n  nvdash: '⊬',\n  nvge: '≥⃒',\n  nvgt: '>⃒',\n  nvinfin: '⧞',\n  nvlArr: '⤂',\n  nvle: '≤⃒',\n  nvlt: '<⃒',\n  nvltrie: '⊴⃒',\n  nvrArr: '⤃',\n  nvrtrie: '⊵⃒',\n  nvsim: '∼⃒',\n  nwArr: '⇖',\n  nwarhk: '⤣',\n  nwarr: '↖',\n  nwarrow: '↖',\n  nwnear: '⤧',\n  oS: 'Ⓢ',\n  oacute: 'ó',\n  oast: '⊛',\n  ocir: '⊚',\n  ocirc: 'ô',\n  ocy: 'о',\n  odash: '⊝',\n  odblac: 'ő',\n  odiv: '⨸',\n  odot: '⊙',\n  odsold: '⦼',\n  oelig: 'œ',\n  ofcir: '⦿',\n  ofr: '𝔬',\n  ogon: '˛',\n  ograve: 'ò',\n  ogt: '⧁',\n  ohbar: '⦵',\n  ohm: 'Ω',\n  oint: '∮',\n  olarr: '↺',\n  olcir: '⦾',\n  olcross: '⦻',\n  oline: '‾',\n  olt: '⧀',\n  omacr: 'ō',\n  omega: 'ω',\n  omicron: 'ο',\n  omid: '⦶',\n  ominus: '⊖',\n  oopf: '𝕠',\n  opar: '⦷',\n  operp: '⦹',\n  oplus: '⊕',\n  or: '∨',\n  orarr: '↻',\n  ord: '⩝',\n  order: 'ℴ',\n  orderof: 'ℴ',\n  ordf: 'ª',\n  ordm: 'º',\n  origof: '⊶',\n  oror: '⩖',\n  orslope: '⩗',\n  orv: '⩛',\n  oscr: 'ℴ',\n  oslash: 'ø',\n  osol: '⊘',\n  otilde: 'õ',\n  otimes: '⊗',\n  otimesas: '⨶',\n  ouml: 'ö',\n  ovbar: '⌽',\n  par: '∥',\n  para: '¶',\n  parallel: '∥',\n  parsim: '⫳',\n  parsl: '⫽',\n  part: '∂',\n  pcy: 'п',\n  percnt: '%',\n  period: '.',\n  permil: '‰',\n  perp: '⊥',\n  pertenk: '‱',\n  pfr: '𝔭',\n  phi: 'φ',\n  phiv: 'ϕ',\n  phmmat: 'ℳ',\n  phone: '☎',\n  pi: 'π',\n  pitchfork: '⋔',\n  piv: 'ϖ',\n  planck: 'ℏ',\n  planckh: 'ℎ',\n  plankv: 'ℏ',\n  plus: '+',\n  plusacir: '⨣',\n  plusb: '⊞',\n  pluscir: '⨢',\n  plusdo: '∔',\n  plusdu: '⨥',\n  pluse: '⩲',\n  plusmn: '±',\n  plussim: '⨦',\n  plustwo: '⨧',\n  pm: '±',\n  pointint: '⨕',\n  popf: '𝕡',\n  pound: '£',\n  pr: '≺',\n  prE: '⪳',\n  prap: '⪷',\n  prcue: '≼',\n  pre: '⪯',\n  prec: '≺',\n  precapprox: '⪷',\n  preccurlyeq: '≼',\n  preceq: '⪯',\n  precnapprox: '⪹',\n  precneqq: '⪵',\n  precnsim: '⋨',\n  precsim: '≾',\n  prime: '′',\n  primes: 'ℙ',\n  prnE: '⪵',\n  prnap: '⪹',\n  prnsim: '⋨',\n  prod: '∏',\n  profalar: '⌮',\n  profline: '⌒',\n  profsurf: '⌓',\n  prop: '∝',\n  propto: '∝',\n  prsim: '≾',\n  prurel: '⊰',\n  pscr: '𝓅',\n  psi: 'ψ',\n  puncsp: ' ',\n  qfr: '𝔮',\n  qint: '⨌',\n  qopf: '𝕢',\n  qprime: '⁗',\n  qscr: '𝓆',\n  quaternions: 'ℍ',\n  quatint: '⨖',\n  quest: '?',\n  questeq: '≟',\n  quot: '\"',\n  rAarr: '⇛',\n  rArr: '⇒',\n  rAtail: '⤜',\n  rBarr: '⤏',\n  rHar: '⥤',\n  race: '∽̱',\n  racute: 'ŕ',\n  radic: '√',\n  raemptyv: '⦳',\n  rang: '⟩',\n  rangd: '⦒',\n  range: '⦥',\n  rangle: '⟩',\n  raquo: '»',\n  rarr: '→',\n  rarrap: '⥵',\n  rarrb: '⇥',\n  rarrbfs: '⤠',\n  rarrc: '⤳',\n  rarrfs: '⤞',\n  rarrhk: '↪',\n  rarrlp: '↬',\n  rarrpl: '⥅',\n  rarrsim: '⥴',\n  rarrtl: '↣',\n  rarrw: '↝',\n  ratail: '⤚',\n  ratio: '∶',\n  rationals: 'ℚ',\n  rbarr: '⤍',\n  rbbrk: '❳',\n  rbrace: '}',\n  rbrack: ']',\n  rbrke: '⦌',\n  rbrksld: '⦎',\n  rbrkslu: '⦐',\n  rcaron: 'ř',\n  rcedil: 'ŗ',\n  rceil: '⌉',\n  rcub: '}',\n  rcy: 'р',\n  rdca: '⤷',\n  rdldhar: '⥩',\n  rdquo: '”',\n  rdquor: '”',\n  rdsh: '↳',\n  real: 'ℜ',\n  realine: 'ℛ',\n  realpart: 'ℜ',\n  reals: 'ℝ',\n  rect: '▭',\n  reg: '®',\n  rfisht: '⥽',\n  rfloor: '⌋',\n  rfr: '𝔯',\n  rhard: '⇁',\n  rharu: '⇀',\n  rharul: '⥬',\n  rho: 'ρ',\n  rhov: 'ϱ',\n  rightarrow: '→',\n  rightarrowtail: '↣',\n  rightharpoondown: '⇁',\n  rightharpoonup: '⇀',\n  rightleftarrows: '⇄',\n  rightleftharpoons: '⇌',\n  rightrightarrows: '⇉',\n  rightsquigarrow: '↝',\n  rightthreetimes: '⋌',\n  ring: '˚',\n  risingdotseq: '≓',\n  rlarr: '⇄',\n  rlhar: '⇌',\n  rlm: '‏',\n  rmoust: '⎱',\n  rmoustache: '⎱',\n  rnmid: '⫮',\n  roang: '⟭',\n  roarr: '⇾',\n  robrk: '⟧',\n  ropar: '⦆',\n  ropf: '𝕣',\n  roplus: '⨮',\n  rotimes: '⨵',\n  rpar: ')',\n  rpargt: '⦔',\n  rppolint: '⨒',\n  rrarr: '⇉',\n  rsaquo: '›',\n  rscr: '𝓇',\n  rsh: '↱',\n  rsqb: ']',\n  rsquo: '’',\n  rsquor: '’',\n  rthree: '⋌',\n  rtimes: '⋊',\n  rtri: '▹',\n  rtrie: '⊵',\n  rtrif: '▸',\n  rtriltri: '⧎',\n  ruluhar: '⥨',\n  rx: '℞',\n  sacute: 'ś',\n  sbquo: '‚',\n  sc: '≻',\n  scE: '⪴',\n  scap: '⪸',\n  scaron: 'š',\n  sccue: '≽',\n  sce: '⪰',\n  scedil: 'ş',\n  scirc: 'ŝ',\n  scnE: '⪶',\n  scnap: '⪺',\n  scnsim: '⋩',\n  scpolint: '⨓',\n  scsim: '≿',\n  scy: 'с',\n  sdot: '⋅',\n  sdotb: '⊡',\n  sdote: '⩦',\n  seArr: '⇘',\n  searhk: '⤥',\n  searr: '↘',\n  searrow: '↘',\n  sect: '§',\n  semi: ';',\n  seswar: '⤩',\n  setminus: '∖',\n  setmn: '∖',\n  sext: '✶',\n  sfr: '𝔰',\n  sfrown: '⌢',\n  sharp: '♯',\n  shchcy: 'щ',\n  shcy: 'ш',\n  shortmid: '∣',\n  shortparallel: '∥',\n  shy: '­',\n  sigma: 'σ',\n  sigmaf: 'ς',\n  sigmav: 'ς',\n  sim: '∼',\n  simdot: '⩪',\n  sime: '≃',\n  simeq: '≃',\n  simg: '⪞',\n  simgE: '⪠',\n  siml: '⪝',\n  simlE: '⪟',\n  simne: '≆',\n  simplus: '⨤',\n  simrarr: '⥲',\n  slarr: '←',\n  smallsetminus: '∖',\n  smashp: '⨳',\n  smeparsl: '⧤',\n  smid: '∣',\n  smile: '⌣',\n  smt: '⪪',\n  smte: '⪬',\n  smtes: '⪬︀',\n  softcy: 'ь',\n  sol: '/',\n  solb: '⧄',\n  solbar: '⌿',\n  sopf: '𝕤',\n  spades: '♠',\n  spadesuit: '♠',\n  spar: '∥',\n  sqcap: '⊓',\n  sqcaps: '⊓︀',\n  sqcup: '⊔',\n  sqcups: '⊔︀',\n  sqsub: '⊏',\n  sqsube: '⊑',\n  sqsubset: '⊏',\n  sqsubseteq: '⊑',\n  sqsup: '⊐',\n  sqsupe: '⊒',\n  sqsupset: '⊐',\n  sqsupseteq: '⊒',\n  squ: '□',\n  square: '□',\n  squarf: '▪',\n  squf: '▪',\n  srarr: '→',\n  sscr: '𝓈',\n  ssetmn: '∖',\n  ssmile: '⌣',\n  sstarf: '⋆',\n  star: '☆',\n  starf: '★',\n  straightepsilon: 'ϵ',\n  straightphi: 'ϕ',\n  strns: '¯',\n  sub: '⊂',\n  subE: '⫅',\n  subdot: '⪽',\n  sube: '⊆',\n  subedot: '⫃',\n  submult: '⫁',\n  subnE: '⫋',\n  subne: '⊊',\n  subplus: '⪿',\n  subrarr: '⥹',\n  subset: '⊂',\n  subseteq: '⊆',\n  subseteqq: '⫅',\n  subsetneq: '⊊',\n  subsetneqq: '⫋',\n  subsim: '⫇',\n  subsub: '⫕',\n  subsup: '⫓',\n  succ: '≻',\n  succapprox: '⪸',\n  succcurlyeq: '≽',\n  succeq: '⪰',\n  succnapprox: '⪺',\n  succneqq: '⪶',\n  succnsim: '⋩',\n  succsim: '≿',\n  sum: '∑',\n  sung: '♪',\n  sup1: '¹',\n  sup2: '²',\n  sup3: '³',\n  sup: '⊃',\n  supE: '⫆',\n  supdot: '⪾',\n  supdsub: '⫘',\n  supe: '⊇',\n  supedot: '⫄',\n  suphsol: '⟉',\n  suphsub: '⫗',\n  suplarr: '⥻',\n  supmult: '⫂',\n  supnE: '⫌',\n  supne: '⊋',\n  supplus: '⫀',\n  supset: '⊃',\n  supseteq: '⊇',\n  supseteqq: '⫆',\n  supsetneq: '⊋',\n  supsetneqq: '⫌',\n  supsim: '⫈',\n  supsub: '⫔',\n  supsup: '⫖',\n  swArr: '⇙',\n  swarhk: '⤦',\n  swarr: '↙',\n  swarrow: '↙',\n  swnwar: '⤪',\n  szlig: 'ß',\n  target: '⌖',\n  tau: 'τ',\n  tbrk: '⎴',\n  tcaron: 'ť',\n  tcedil: 'ţ',\n  tcy: 'т',\n  tdot: '⃛',\n  telrec: '⌕',\n  tfr: '𝔱',\n  there4: '∴',\n  therefore: '∴',\n  theta: 'θ',\n  thetasym: 'ϑ',\n  thetav: 'ϑ',\n  thickapprox: '≈',\n  thicksim: '∼',\n  thinsp: ' ',\n  thkap: '≈',\n  thksim: '∼',\n  thorn: 'þ',\n  tilde: '˜',\n  times: '×',\n  timesb: '⊠',\n  timesbar: '⨱',\n  timesd: '⨰',\n  tint: '∭',\n  toea: '⤨',\n  top: '⊤',\n  topbot: '⌶',\n  topcir: '⫱',\n  topf: '𝕥',\n  topfork: '⫚',\n  tosa: '⤩',\n  tprime: '‴',\n  trade: '™',\n  triangle: '▵',\n  triangledown: '▿',\n  triangleleft: '◃',\n  trianglelefteq: '⊴',\n  triangleq: '≜',\n  triangleright: '▹',\n  trianglerighteq: '⊵',\n  tridot: '◬',\n  trie: '≜',\n  triminus: '⨺',\n  triplus: '⨹',\n  trisb: '⧍',\n  tritime: '⨻',\n  trpezium: '⏢',\n  tscr: '𝓉',\n  tscy: 'ц',\n  tshcy: 'ћ',\n  tstrok: 'ŧ',\n  twixt: '≬',\n  twoheadleftarrow: '↞',\n  twoheadrightarrow: '↠',\n  uArr: '⇑',\n  uHar: '⥣',\n  uacute: 'ú',\n  uarr: '↑',\n  ubrcy: 'ў',\n  ubreve: 'ŭ',\n  ucirc: 'û',\n  ucy: 'у',\n  udarr: '⇅',\n  udblac: 'ű',\n  udhar: '⥮',\n  ufisht: '⥾',\n  ufr: '𝔲',\n  ugrave: 'ù',\n  uharl: '↿',\n  uharr: '↾',\n  uhblk: '▀',\n  ulcorn: '⌜',\n  ulcorner: '⌜',\n  ulcrop: '⌏',\n  ultri: '◸',\n  umacr: 'ū',\n  uml: '¨',\n  uogon: 'ų',\n  uopf: '𝕦',\n  uparrow: '↑',\n  updownarrow: '↕',\n  upharpoonleft: '↿',\n  upharpoonright: '↾',\n  uplus: '⊎',\n  upsi: 'υ',\n  upsih: 'ϒ',\n  upsilon: 'υ',\n  upuparrows: '⇈',\n  urcorn: '⌝',\n  urcorner: '⌝',\n  urcrop: '⌎',\n  uring: 'ů',\n  urtri: '◹',\n  uscr: '𝓊',\n  utdot: '⋰',\n  utilde: 'ũ',\n  utri: '▵',\n  utrif: '▴',\n  uuarr: '⇈',\n  uuml: 'ü',\n  uwangle: '⦧',\n  vArr: '⇕',\n  vBar: '⫨',\n  vBarv: '⫩',\n  vDash: '⊨',\n  vangrt: '⦜',\n  varepsilon: 'ϵ',\n  varkappa: 'ϰ',\n  varnothing: '∅',\n  varphi: 'ϕ',\n  varpi: 'ϖ',\n  varpropto: '∝',\n  varr: '↕',\n  varrho: 'ϱ',\n  varsigma: 'ς',\n  varsubsetneq: '⊊︀',\n  varsubsetneqq: '⫋︀',\n  varsupsetneq: '⊋︀',\n  varsupsetneqq: '⫌︀',\n  vartheta: 'ϑ',\n  vartriangleleft: '⊲',\n  vartriangleright: '⊳',\n  vcy: 'в',\n  vdash: '⊢',\n  vee: '∨',\n  veebar: '⊻',\n  veeeq: '≚',\n  vellip: '⋮',\n  verbar: '|',\n  vert: '|',\n  vfr: '𝔳',\n  vltri: '⊲',\n  vnsub: '⊂⃒',\n  vnsup: '⊃⃒',\n  vopf: '𝕧',\n  vprop: '∝',\n  vrtri: '⊳',\n  vscr: '𝓋',\n  vsubnE: '⫋︀',\n  vsubne: '⊊︀',\n  vsupnE: '⫌︀',\n  vsupne: '⊋︀',\n  vzigzag: '⦚',\n  wcirc: 'ŵ',\n  wedbar: '⩟',\n  wedge: '∧',\n  wedgeq: '≙',\n  weierp: '℘',\n  wfr: '𝔴',\n  wopf: '𝕨',\n  wp: '℘',\n  wr: '≀',\n  wreath: '≀',\n  wscr: '𝓌',\n  xcap: '⋂',\n  xcirc: '◯',\n  xcup: '⋃',\n  xdtri: '▽',\n  xfr: '𝔵',\n  xhArr: '⟺',\n  xharr: '⟷',\n  xi: 'ξ',\n  xlArr: '⟸',\n  xlarr: '⟵',\n  xmap: '⟼',\n  xnis: '⋻',\n  xodot: '⨀',\n  xopf: '𝕩',\n  xoplus: '⨁',\n  xotime: '⨂',\n  xrArr: '⟹',\n  xrarr: '⟶',\n  xscr: '𝓍',\n  xsqcup: '⨆',\n  xuplus: '⨄',\n  xutri: '△',\n  xvee: '⋁',\n  xwedge: '⋀',\n  yacute: 'ý',\n  yacy: 'я',\n  ycirc: 'ŷ',\n  ycy: 'ы',\n  yen: '¥',\n  yfr: '𝔶',\n  yicy: 'ї',\n  yopf: '𝕪',\n  yscr: '𝓎',\n  yucy: 'ю',\n  yuml: 'ÿ',\n  zacute: 'ź',\n  zcaron: 'ž',\n  zcy: 'з',\n  zdot: 'ż',\n  zeetrf: 'ℨ',\n  zeta: 'ζ',\n  zfr: '𝔷',\n  zhcy: 'ж',\n  zigrarr: '⇝',\n  zopf: '𝕫',\n  zscr: '𝓏',\n  zwj: '‍',\n  zwnj: '‌'\n}\n","import {characterEntities} from 'character-entities'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Decode a single character reference (without the `&` or `;`).\n * You probably only need this when you’re building parsers yourself that follow\n * different rules compared to HTML.\n * This is optimized to be tiny in browsers.\n *\n * @param {string} value\n *   `notin` (named), `#123` (deci), `#x123` (hexa).\n * @returns {string|false}\n *   Decoded reference.\n */\nexport function decodeNamedCharacterReference(value) {\n  return own.call(characterEntities, value) ? characterEntities[value] : false\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  }\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === 'linePrefix'\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n    marker = code\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('codeFencedFenceSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, 'whitespace')(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence')\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return infoBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, metaBefore, 'whitespace')(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return infoBefore(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          'linePrefix',\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return beforeContentChunk(code)\n    }\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence')\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            'linePrefix',\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : 4\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence')\n        return sequenceClose(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence')\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code)\n          : sequenceCloseAfter(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented')\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented')\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n      enter = undefined\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    effects.exit('codeTextSequence')\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return sequenceClose(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return between\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return between(code)\n    }\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition)\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n      if (!current.next) {\n        stream.push(null)\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n      tokenizer.write(stream)\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n  index = -1\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1]\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      return markerAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionDestination',\n      'definitionDestinationLiteral',\n      'definitionDestinationLiteralMarker',\n      'definitionDestinationRaw',\n      'definitionDestinationString'\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, 'whitespace')(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      'definitionTitle',\n      'definitionTitleMarker',\n      'definitionTitleString'\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return atBreak(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequenceFurther(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n    effects.exit('atxHeadingSequence')\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      marker = 3\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      marker = 2\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      marker = 5\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = 4\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n      return cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === 47\n      const name = buffer.toLowerCase()\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      marker = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 47 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData')\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationStart(code)\n    }\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase()\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n      return continuation(code)\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationAfter(code)\n    }\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow')\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62\n      ? end(code)\n      : code === 45\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n    if (code === null) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          'linePrefix',\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : 4\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  while (++index < events.length) {\n    const token = events[index][1]\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code)\n    }\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak')\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak')\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n    effects.exit('thematicBreakSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, 'whitespace')(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== 'lineEnding' &&\n        self.events[index][1].type !== 'linePrefix' &&\n        self.events[index][1].type !== 'content'\n      ) {\n        paragraph = self.events[index][1].type === 'paragraph'\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      marker = code\n      return before(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence')\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    effects.exit('setextHeadingLineSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'lineSuffix')(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {void}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | void}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n\n    // @ts-expect-error `Buffer` does allow an encoding.\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCharCode(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n  if (\n    // C0 except for HT, LF, FF, CR, space.\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) ||\n    // Control character (DEL) of C0, and C1 controls.\n    (code > 126 && code < 160) ||\n    // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) ||\n    // Noncharacters.\n    (code > 64975 && code < 65008) /* eslint-disable no-bitwise */ ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 /* eslint-enable no-bitwise */ ||\n    // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options?] | void[], string, Root>}\n */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return '\\u001B[33m' + d + '\\u001B[39m'\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","module.exports = Function.call.bind(Object.prototype.hasOwnProperty);\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = require('./lib/has');\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) { /**/ }\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' +\n              'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar has = require('./lib/has');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bigint: createPrimitiveTypeChecker('bigint'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message, data) {\n    this.message = message;\n    this.data = data && typeof data === 'object' ? data: {};\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError(\n          'Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'),\n          {expectedType: expectedType}\n        );\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var expectedTypes = [];\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);\n        if (checkerResult == null) {\n          return null;\n        }\n        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {\n          expectedTypes.push(checkerResult.data.expectedType);\n        }\n      }\n      var expectedTypesMessage = (expectedTypes.length > 0) ? ', expected one of type [' + expectedTypes.join(', ') + ']': '';\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function invalidValidatorError(componentName, location, propFullName, key, type) {\n    return new PropTypeError(\n      (componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' +\n      'it must be a function, usually from the `prop-types` package, but received `' + type + '`.'\n    );\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (has(shapeTypes, key) && typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","/**\n * @license React\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n          case REACT_SUSPENSE_LIST_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_SERVER_CONTEXT_TYPE:\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n}\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar SuspenseList = REACT_SUSPENSE_LIST_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false;\nvar hasWarnedAboutDeprecatedIsConcurrentMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 18+.');\n    }\n  }\n\n  return false;\n}\nfunction isConcurrentMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsConcurrentMode) {\n      hasWarnedAboutDeprecatedIsConcurrentMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isConcurrentMode() alias has been deprecated, ' + 'and will be removed in React 18+.');\n    }\n  }\n\n  return false;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\nfunction isSuspenseList(object) {\n  return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;\n}\n\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.SuspenseList = SuspenseList;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isSuspenseList = isSuspenseList;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template {import('react').ElementType} T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = index\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n",null,null],"names":["protocols","uriTransformer","uri","url","trim","first","charAt","colon","indexOf","index","length","protocol","slice","toLowerCase","isBuffer","obj","constructor","stringifyPosition","value","position","point","line","column","pos","start","end","VFileMessage","Error","reason","place","origin","parts","super","undefined","this","name","message","stack","fatal","source","ruleId","file","actual","expected","note","isUrl","fileUrlOrPath","href","prototype","order","VFile","options","bufferLike","buffer","path","data","messages","history","cwd","proc","stored","result","map","prop","includes","urlToPath","fileURLToPath","assertNonEmpty","push","dirname","assertPath","basename","join","assertPart","extname","charCodeAt","stem","toString","encoding","info","fail","part","sep","bail","error","hasOwn","Object","hasOwnProperty","toStr","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","key","hasOwnConstructor","hasIsPrototypeOf","setProperty","target","enumerable","configurable","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","arguments","i","deep","getPrototypeOf","Symbol","toStringTag","iterator","trough","fns","pipeline","run","values","middlewareIndex","callback","pop","TypeError","next","output","fn","middleware","called","wrapped","parameters","fnExpectsCallback","done","apply","Promise","then","wrap","use","middelware","unified","base","transformers","attachers","frozen","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","assign","add","plugin","plugins","entry","isPlainObj","parse","doc","vfile","assertParser","newable","String","stringify","node","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","processSync","destination","keys","type","asyncName","Boolean","looksLikeAVFile","emptyOptions","one","includeImageAlt","includeHtml","alt","all","children","splice","list","remove","items","chunkStart","from","unshift","syntaxExtension","extension","hook","left","right","code","constructs","existing","before","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","test","fromCharCode","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","content","tokenize","contentStart","attempt","parser","contentInitial","lineStart","previous","token","contentType","document","self","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","classifyCharacter","resolveAll","context","attention","attentionMarkers","marker","inside","after","open","close","_open","_close","group","text","openingSequence","closingSequence","nextEvents","sliceSerialize","movePoint","insideSpan","_bufferIndex","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","blankLine","partial","blockQuote","state","_container","contBefore","characterEscape","characterEntities","AElig","AMP","Aacute","Abreve","Acirc","Acy","Afr","Agrave","Alpha","Amacr","And","Aogon","Aopf","ApplyFunction","Aring","Ascr","Assign","Atilde","Auml","Backslash","Barv","Barwed","Bcy","Because","Bernoullis","Beta","Bfr","Bopf","Breve","Bscr","Bumpeq","CHcy","COPY","Cacute","Cap","CapitalDifferentialD","Cayleys","Ccaron","Ccedil","Ccirc","Cconint","Cdot","Cedilla","CenterDot","Cfr","Chi","CircleDot","CircleMinus","CirclePlus","CircleTimes","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","Colon","Colone","Congruent","Conint","ContourIntegral","Copf","Coproduct","CounterClockwiseContourIntegral","Cross","Cscr","Cup","CupCap","DD","DDotrahd","DJcy","DScy","DZcy","Dagger","Darr","Dashv","Dcaron","Dcy","Del","Delta","Dfr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","Diamond","DifferentialD","Dopf","Dot","DotDot","DotEqual","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","DownArrowBar","DownArrowUpArrow","DownBreve","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","Downarrow","Dscr","Dstrok","ENG","ETH","Eacute","Ecaron","Ecirc","Ecy","Edot","Efr","Egrave","Element","Emacr","EmptySmallSquare","EmptyVerySmallSquare","Eogon","Eopf","Epsilon","Equal","EqualTilde","Equilibrium","Escr","Esim","Eta","Euml","Exists","ExponentialE","Fcy","Ffr","FilledSmallSquare","FilledVerySmallSquare","Fopf","ForAll","Fouriertrf","Fscr","GJcy","GT","Gamma","Gammad","Gbreve","Gcedil","Gcirc","Gcy","Gdot","Gfr","Gg","Gopf","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","Gt","HARDcy","Hacek","Hat","Hcirc","Hfr","HilbertSpace","Hopf","HorizontalLine","Hscr","Hstrok","HumpDownHump","HumpEqual","IEcy","IJlig","IOcy","Iacute","Icirc","Icy","Idot","Ifr","Igrave","Im","Imacr","ImaginaryI","Implies","Int","Integral","Intersection","InvisibleComma","InvisibleTimes","Iogon","Iopf","Iota","Iscr","Itilde","Iukcy","Iuml","Jcirc","Jcy","Jfr","Jopf","Jscr","Jsercy","Jukcy","KHcy","KJcy","Kappa","Kcedil","Kcy","Kfr","Kopf","Kscr","LJcy","LT","Lacute","Lambda","Lang","Laplacetrf","Larr","Lcaron","Lcedil","Lcy","LeftAngleBracket","LeftArrow","LeftArrowBar","LeftArrowRightArrow","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","LeftRightArrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","Leftarrow","Leftrightarrow","LessEqualGreater","LessFullEqual","LessGreater","LessLess","LessSlantEqual","LessTilde","Lfr","Ll","Lleftarrow","Lmidot","LongLeftArrow","LongLeftRightArrow","LongRightArrow","Longleftarrow","Longleftrightarrow","Longrightarrow","Lopf","LowerLeftArrow","LowerRightArrow","Lscr","Lsh","Lstrok","Lt","Map","Mcy","MediumSpace","Mellintrf","Mfr","MinusPlus","Mopf","Mscr","Mu","NJcy","Nacute","Ncaron","Ncedil","Ncy","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","NestedGreaterGreater","NestedLessLess","NewLine","Nfr","NoBreak","NonBreakingSpace","Nopf","Not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","Nscr","Ntilde","Nu","OElig","Oacute","Ocirc","Ocy","Odblac","Ofr","Ograve","Omacr","Omega","Omicron","Oopf","OpenCurlyDoubleQuote","OpenCurlyQuote","Or","Oscr","Oslash","Otilde","Otimes","Ouml","OverBar","OverBrace","OverBracket","OverParenthesis","PartialD","Pcy","Pfr","Phi","Pi","PlusMinus","Poincareplane","Popf","Pr","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","Prime","Product","Proportion","Proportional","Pscr","Psi","QUOT","Qfr","Qopf","Qscr","RBarr","REG","Racute","Rang","Rarr","Rarrtl","Rcaron","Rcedil","Rcy","Re","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","Rfr","Rho","RightAngleBracket","RightArrow","RightArrowBar","RightArrowLeftArrow","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","RightTee","RightTeeArrow","RightTeeVector","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","Rightarrow","Ropf","RoundImplies","Rrightarrow","Rscr","Rsh","RuleDelayed","SHCHcy","SHcy","SOFTcy","Sacute","Sc","Scaron","Scedil","Scirc","Scy","Sfr","ShortDownArrow","ShortLeftArrow","ShortRightArrow","ShortUpArrow","Sigma","SmallCircle","Sopf","Sqrt","Square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","Sscr","Star","Sub","Subset","SubsetEqual","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","SuchThat","Sum","Sup","Superset","SupersetEqual","Supset","THORN","TRADE","TSHcy","TScy","Tab","Tau","Tcaron","Tcedil","Tcy","Tfr","Therefore","Theta","ThickSpace","ThinSpace","Tilde","TildeEqual","TildeFullEqual","TildeTilde","Topf","TripleDot","Tscr","Tstrok","Uacute","Uarr","Uarrocir","Ubrcy","Ubreve","Ucirc","Ucy","Udblac","Ufr","Ugrave","Umacr","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","Uopf","UpArrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","UpEquilibrium","UpTee","UpTeeArrow","Uparrow","Updownarrow","UpperLeftArrow","UpperRightArrow","Upsi","Upsilon","Uring","Uscr","Utilde","Uuml","VDash","Vbar","Vcy","Vdash","Vdashl","Vee","Verbar","Vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","Vopf","Vscr","Vvdash","Wcirc","Wedge","Wfr","Wopf","Wscr","Xfr","Xi","Xopf","Xscr","YAcy","YIcy","YUcy","Yacute","Ycirc","Ycy","Yfr","Yopf","Yscr","Yuml","ZHcy","Zacute","Zcaron","Zcy","Zdot","ZeroWidthSpace","Zeta","Zfr","Zopf","Zscr","aacute","abreve","ac","acE","acd","acirc","acute","acy","aelig","af","afr","agrave","alefsym","aleph","alpha","amacr","amalg","amp","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","aogon","aopf","ap","apE","apacir","ape","apid","apos","approx","approxeq","aring","ascr","ast","asymp","asympeq","atilde","auml","awconint","awint","bNot","backcong","backepsilon","backprime","backsim","backsimeq","barvee","barwed","barwedge","bbrk","bbrktbrk","bcong","bcy","bdquo","becaus","because","bemptyv","bepsi","bernou","beta","beth","between","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bnot","bopf","bot","bottom","bowtie","boxDL","boxDR","boxDl","boxDr","boxH","boxHD","boxHU","boxHd","boxHu","boxUL","boxUR","boxUl","boxUr","boxV","boxVH","boxVL","boxVR","boxVh","boxVl","boxVr","boxbox","boxdL","boxdR","boxdl","boxdr","boxh","boxhD","boxhU","boxhd","boxhu","boxminus","boxplus","boxtimes","boxuL","boxuR","boxul","boxur","boxv","boxvH","boxvL","boxvR","boxvh","boxvl","boxvr","bprime","breve","brvbar","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","bumpeq","cacute","cap","capand","capbrcup","capcap","capcup","capdot","caps","caret","caron","ccaps","ccaron","ccedil","ccirc","ccups","ccupssm","cdot","cedil","cemptyv","cent","centerdot","cfr","chcy","checkmark","chi","cir","cirE","circ","circeq","circlearrowleft","circlearrowright","circledR","circledS","circledast","circledcirc","circleddash","cire","cirfnint","cirmid","cirscir","clubs","clubsuit","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","conint","copf","coprod","copysr","crarr","cross","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","dArr","dHar","dagger","daleth","darr","dash","dashv","dbkarow","dblac","dcaron","dcy","dd","ddagger","ddarr","ddotseq","deg","delta","demptyv","dfisht","dfr","dharl","dharr","diam","diamond","diamondsuit","diams","die","digamma","disin","div","divide","divideontimes","divonx","djcy","dlcorn","dlcrop","dollar","dopf","dot","doteq","doteqdot","dotminus","dotplus","dotsquare","doublebarwedge","downarrow","downdownarrows","downharpoonleft","downharpoonright","drbkarow","drcorn","drcrop","dscr","dscy","dsol","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","dzcy","dzigrarr","eDDot","eDot","eacute","easter","ecaron","ecir","ecirc","ecolon","ecy","edot","ee","efDot","efr","eg","egrave","egs","egsdot","el","elinters","ell","els","elsdot","emacr","empty","emptyset","emptyv","emsp13","emsp14","emsp","eng","ensp","eogon","eopf","epar","eparsl","eplus","epsi","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equals","equest","equiv","equivDD","eqvparsl","erDot","erarr","escr","esdot","esim","eta","eth","euml","euro","excl","exist","expectation","exponentiale","fallingdotseq","fcy","female","ffilig","fflig","ffllig","ffr","filig","fjlig","flat","fllig","fltns","fnof","fopf","forall","fork","forkv","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","fscr","gE","gEl","gacute","gamma","gammad","gap","gbreve","gcirc","gcy","gdot","ge","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","gfr","gg","ggg","gimel","gjcy","gl","glE","gla","glj","gnE","gnap","gnapprox","gne","gneq","gneqq","gnsim","gopf","grave","gscr","gsim","gsime","gsiml","gt","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","hArr","hairsp","half","hamilt","hardcy","harr","harrcir","harrw","hbar","hcirc","hearts","heartsuit","hellip","hercon","hfr","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar","hscr","hslash","hstrok","hybull","hyphen","iacute","ic","icirc","icy","iecy","iexcl","iff","ifr","igrave","ii","iiiint","iiint","iinfin","iiota","ijlig","imacr","image","imagline","imagpart","imath","imof","imped","in","incare","infin","infintie","inodot","int","intcal","integers","intercal","intlarhk","intprod","iocy","iogon","iopf","iota","iprod","iquest","iscr","isin","isinE","isindot","isins","isinsv","isinv","it","itilde","iukcy","iuml","jcirc","jcy","jfr","jmath","jopf","jscr","jsercy","jukcy","kappa","kappav","kcedil","kcy","kfr","kgreen","khcy","kjcy","kopf","kscr","lAarr","lArr","lAtail","lBarr","lE","lEg","lHar","lacute","laemptyv","lagran","lambda","lang","langd","langle","lap","laquo","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","lcaron","lcedil","lceil","lcub","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","le","leftarrow","leftarrowtail","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftthreetimes","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessgtr","lesssim","lfisht","lfloor","lfr","lg","lgE","lhard","lharu","lharul","lhblk","ljcy","ll","llarr","llcorner","llhard","lltri","lmidot","lmoust","lmoustache","lnE","lnap","lnapprox","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lowast","lowbar","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","lscr","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok","lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltrPar","ltri","ltrie","ltrif","lurdshar","luruhar","lvertneqq","lvnE","mDDot","macr","male","malt","maltese","mapsto","mapstodown","mapstoleft","mapstoup","mcomma","mcy","mdash","measuredangle","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","mlcp","mldr","mnplus","models","mopf","mp","mscr","mstpos","mu","multimap","mumap","nGg","nGt","nGtv","nLeftarrow","nLeftrightarrow","nLl","nLt","nLtv","nRightarrow","nVDash","nVdash","nabla","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy","ndash","ne","neArr","nearhk","nearr","nearrow","nedot","nequiv","nesear","nesim","nexist","nexists","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","ngsim","ngt","ngtr","nhArr","nharr","nhpar","ni","nis","nisd","niv","njcy","nlArr","nlE","nlarr","nldr","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nlsim","nlt","nltri","nltrie","nmid","nopf","not","notin","notinE","notindot","notinva","notinvb","notinvc","notni","notniva","notnivb","notnivc","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","nu","num","numero","numsp","nvDash","nvHarr","nvap","nvdash","nvge","nvgt","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwArr","nwarhk","nwarr","nwarrow","nwnear","oS","oacute","oast","ocir","ocirc","ocy","odash","odblac","odiv","odot","odsold","oelig","ofcir","ofr","ogon","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","omacr","omega","omicron","omid","ominus","oopf","opar","operp","oplus","or","orarr","ord","orderof","ordf","ordm","origof","oror","orslope","orv","oscr","oslash","osol","otilde","otimes","otimesas","ouml","ovbar","par","para","parallel","parsim","parsl","pcy","percnt","period","permil","perp","pertenk","pfr","phi","phiv","phmmat","phone","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plusmn","plussim","plustwo","pm","pointint","popf","pound","pr","prE","prap","prcue","pre","prec","precapprox","preccurlyeq","preceq","precnapprox","precneqq","precnsim","precsim","prime","primes","prnE","prnap","prnsim","prod","profalar","profline","profsurf","propto","prsim","prurel","pscr","psi","puncsp","qfr","qint","qopf","qprime","qscr","quaternions","quatint","quest","questeq","quot","rAarr","rArr","rAtail","rBarr","rHar","race","racute","radic","raemptyv","rang","rangd","range","rangle","raquo","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","rcaron","rcedil","rceil","rcub","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","real","realine","realpart","reals","rect","reg","rfisht","rfloor","rfr","rhard","rharu","rharul","rho","rhov","rightarrow","rightarrowtail","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","rightthreetimes","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","ropf","roplus","rotimes","rpar","rpargt","rppolint","rrarr","rsaquo","rscr","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","ruluhar","rx","sacute","sbquo","sc","scE","scap","scaron","sccue","sce","scedil","scirc","scnE","scnap","scnsim","scpolint","scsim","scy","sdot","sdotb","sdote","seArr","searhk","searr","searrow","sect","semi","seswar","setminus","setmn","sext","sfr","sfrown","sharp","shchcy","shcy","shortmid","shortparallel","shy","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","softcy","sol","solb","solbar","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squarf","squf","srarr","sscr","ssetmn","ssmile","sstarf","star","starf","straightepsilon","straightphi","strns","sub","subE","subdot","sube","subedot","submult","subnE","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeq","succnapprox","succneqq","succnsim","succsim","sum","sung","sup1","sup2","sup3","sup","supE","supdot","supdsub","supe","supedot","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swArr","swarhk","swarr","swarrow","swnwar","szlig","tau","tbrk","tcaron","tcedil","tcy","tdot","telrec","tfr","there4","therefore","theta","thetasym","thetav","thickapprox","thicksim","thinsp","thkap","thksim","thorn","tilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","topf","topfork","tosa","tprime","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","triplus","trisb","tritime","trpezium","tscr","tscy","tshcy","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","uArr","uHar","uacute","uarr","ubrcy","ubreve","ucirc","ucy","udarr","udblac","udhar","ufisht","ufr","ugrave","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","umacr","uml","uogon","uopf","uparrow","updownarrow","upharpoonleft","upharpoonright","uplus","upsi","upsih","upsilon","upuparrows","urcorn","urcorner","urcrop","uring","urtri","uscr","utdot","utilde","utri","utrif","uuarr","uuml","uwangle","vArr","vBar","vBarv","vDash","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","vcy","vdash","vee","veebar","veeeq","vellip","verbar","vert","vfr","vltri","vnsub","vnsup","vopf","vprop","vrtri","vscr","vsubnE","vsubne","vsupnE","vsupne","vzigzag","wcirc","wedbar","wedge","wedgeq","weierp","wfr","wopf","wp","wr","wreath","wscr","xcap","xcirc","xcup","xdtri","xfr","xhArr","xharr","xi","xlArr","xlarr","xmap","xnis","xodot","xopf","xoplus","xotime","xrArr","xrarr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","yacute","yacy","ycirc","ycy","yen","yfr","yicy","yopf","yscr","yucy","yuml","zacute","zcaron","zcy","zdot","zeetrf","zeta","zfr","zhcy","zigrarr","zopf","zscr","zwj","zwnj","decodeNamedCharacterReference","characterReference","numeric","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","tail","sequenceOpen","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","codeIndented","afterPrefix","atBreak","furtherStart","codeText","tailExitIndex","headEnterIndex","subtokenize","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","_isInFirstContentOfListItem","subcontent","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","begin","escape","factoryWhitespace","normalizeIdentifier","replace","toUpperCase","definition","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","defined","beforeMarker","titleAfter","titleAfterOptionalWhitespace","hardBreakEscape","headingAtx","sequenceFurther","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","resolveTo","htmlText","returnState","instruction","tagOpen","declaration","commentEnd","comment","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","media","label","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","labelStartLink","lineEnding","thematicBreak","sequence","initialSize","kind","atMarker","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","setextUnderline","paragraph","heading","initial","flowInitial","afterConstruct","resolver","createResolver","string","initializeFactory","field","notText","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","_index","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","startIndex","startBufferIndex","endIndex","endBufferIndex","view","head","shift","sliceChunks","chunkIndex","go","_","restore","onreturn","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","create","resolveText","extensions","combineExtensions","defaultConstructs","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decode","$0","$1","$2","hex","fromMarkdown","config","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","tokenStack","resume","setData","getData","listStack","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","errorHandler","onExitError","title","depth","referenceType","ancestor","decodeString","fragment","ordered","spread","checked","compiler","postprocess","atCarriageReturn","match","endPosition","lastIndex","exec","Math","ceil","preprocess","d","combined","remarkParse","normalizeUri","skip","encodeURIComponent","footnoteReference","id","safeId","footnoteOrder","counter","footnoteCounts","reuseCounter","properties","clobberPrefix","dataFootnoteRef","ariaDescribedBy","patch","applyData","revert","subtype","suffix","contents","listItemLoose","pointStart","pointEnd","tab","space","trimLines","last","lines","trimLine","codePointAt","handlers","blockquote","break","className","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","parent","results","loose","listLoose","disabled","child","root","table","rows","firstRow","tableContent","body","tableCell","tableRow","siblings","align","cellIndex","cells","cell","alignValue","toml","ignore","yaml","footnoteDefinition","convert","castFactory","typeFactory","tests","checks","any","anyFactory","propsFactory","color","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","concat","clean","createState","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","unknownHandler","passThrough","cache","definitions","augment","hName","hProperties","hChildren","ctx","generated","props","to","defaultUnknownHandler","nodes","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","JSON","footer","remarkRehype$1","bridge","mutate","b","for","c","e","f","g","h","k","l","m","n","p","q","r","t","v","w","x","y","z","a","u","$$typeof","A","reactIs_production_min","AsyncMode","ConcurrentMode","ContextProvider","ForwardRef","Fragment","Memo","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","env","NODE_ENV","hasSymbol","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_ASYNC_MODE_TYPE","REACT_CONCURRENT_MODE_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_BLOCK_TYPE","REACT_FUNDAMENTAL_TYPE","REACT_RESPONDER_TYPE","REACT_SCOPE_TYPE","object","$$typeofType","ContextConsumer","Lazy","hasWarnedAboutDeprecatedIsAsyncMode","reactIs_development","console","isPortal","reactIsModule","exports","require$$0","require$$1","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","objectAssign","test1","getOwnPropertyNames","test2","order2","test3","split","forEach","letter","err","shouldUseNative","symbols","val","toObject","s","ReactPropTypesSecret_1","has","Function","bind","printWarning","ReactPropTypesSecret","loggedTypeFailures","checkPropTypes","typeSpecs","location","componentName","getStack","typeSpecName","ex","resetWarningCache","checkPropTypes_1","ReactIs","require$$2","require$$3","require$$4","emptyFunctionThatReturnsNull","emptyFunction","emptyFunctionWithReset","propTypesModule","isValidElement","throwOnDirectAccess","ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","ANONYMOUS","ReactPropTypes","array","createPrimitiveTypeChecker","bigint","bool","func","number","symbol","createChainableTypeChecker","arrayOf","typeChecker","propName","propFullName","PropTypeError","propValue","getPropType","element","elementType","instanceOf","expectedClass","expectedClassName","isNode","objectOf","propType","oneOf","expectedValues","valuesString","getPreciseType","oneOfType","arrayOfTypeCheckers","checker","getPostfixForTypeWarning","expectedTypes","checkerResult","expectedType","shape","shapeTypes","invalidValidatorError","exact","allKeys","validate","manualPropTypeCallCache","manualPropTypeWarningCount","checkType","isRequired","secret","cacheKey","chainedCheckType","every","iteratorFn","maybeIterable","getIteratorFn","entries","RegExp","isSymbol","Date","PropTypes","shim","getShim","Schema","property","normal","merge","normalize","Info","attribute","boolean","booleanish","overloadedBoolean","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","types","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","style","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","codeBase","codeType","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","zoomAndPan","valid","kebab","camelcase","hastToReact","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","SuspenseList","isSuspenseList","getModuleId","REACT_MODULE_REFERENCE","REACT_SERVER_CONTEXT_TYPE","REACT_OFFSCREEN_TYPE","hasWarnedAboutDeprecatedIsConcurrentMode","whitespace","thing","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","str","lineno","updatePosition","lastIndexOf","Position","msg","filename","silent","re","comments","ret","decl","decls","declarations","StyleToObject","hasIterator","len","styleToObjectModule","styleToObject","tableElements","Set","childrenToReact","childIndex","toReact","skipHtml","transformLinkUri","parentSchema","schema","addProperty","listDepth","component","components","basic","React","linkTarget","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","createElement","count","Type","rest","dashes","find","padRight","padLeft","commas","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","warn","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","propTypes","styleInject","css","ref","insertAt","getElementsByTagName","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","_a","termsArray","terms","dynamicData","customStyle","displayMarkdown","log","newTerm","injectedValue"],"mappings":"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"}